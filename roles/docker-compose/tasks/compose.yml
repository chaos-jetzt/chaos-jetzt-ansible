---
- name: remove compose magic
  docker_compose:
    state: absent
    pull: yes
    project_name: root
    remove_volumes: no
    definition:
      version:                        "3"
      services:
        synapse-postgres:
          image:                      postgres:11
          restart:                    unless-stopped
          volumes:
            - postgres-data:/var/lib/postgresql/data
          environment:
            - POSTGRES_PASSWORD={{ synapse_db_password }}
            - POSTGRES_USER=synapse
            - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
          container_name:             synapse-postgres

        synapse:
          image:                      matrixdotorg/synapse:v1.12.3
          restart:                    unless-stopped
          depends_on:
            - synapse-postgres
          expose:
            - 8008
          volumes:
            - /root/synapse:/data
            - /root/matrix-appservice-irc/appservice-registration-irc.yaml:/irc/appservice-registration-irc.yaml
          labels:
            - "traefik.enable=true"
            - "traefik.http.routers.synapse_http.rule=Host(`matrix.{{ base_url }}`)"
            - "traefik.http.routers.synapse_http.entryPoints=http"
            - "traefik.http.routers.synapse_http.middlewares=https_redirect@file"
            - "traefik.http.routers.synapse_https.rule=Host(`matrix.{{ base_url }}`)"
            - "traefik.http.routers.synapse_https.entryPoints=https"
            - "traefik.http.routers.synapse_https.tls.certresolver=le_http"
            - "traefik.http.services.synapse-app.loadbalancer.server.port=8008"
            - "traefik.http.middlewares.synapse-redirectregex.redirectregex.regex=https://matrix.{{ base_url }}(/?)$$"
            - "traefik.http.middlewares.synapse-redirectregex.redirectregex.replacement=https://chat.{{ base_url }}/"
          container_name:             synapse

        riot:
          image:                      vectorim/riot-web
          restart:                    unless-stopped
          depends_on:
            - synapse
          expose:
            - 80
          volumes:
            - /root/riot/config.json:/app/config.json
          labels:
            - "traefik.enable=true"
            - "traefik.http.routers.riot_http.rule=Host(`chat.{{ base_url }}`)"
            - "traefik.http.routers.riot_http.entryPoints=http"
            - "traefik.http.routers.riot_http.middlewares=https_redirect@file"
            - "traefik.http.routers.riot_https.rule=Host(`chat.{{ base_url }}`)"
            - "traefik.http.routers.riot_https.entryPoints=https"
            - "traefik.http.routers.riot_https.tls.certresolver=le_http"
            - "traefik.http.services.riot-app.loadbalancer.server.port=80"
          container_name:             riot

        homepage:
          image:                      nginx:latest
          expose:
            - 80
          volumes:
            - /root/nginx/html:/usr/share/nginx/html
            - /root/nginx/html_known:/usr/share/nginx/html_known
            - /root/nginx/default.conf:/etc/nginx/conf.d/default.conf
          labels:
            - "traefik.enable=true"
            - "traefik.http.routers.homepage_http.rule=Host(`{{ base_url }}`)"
            - "traefik.http.routers.homepage_http.entryPoints=http"
            - "traefik.http.routers.homepage_http.middlewares=https_redirect@file"
            - "traefik.http.routers.homepage_https.rule=Host(`{{ base_url }}`)"
            - "traefik.http.routers.homepage_https.entryPoints=https"
            - "traefik.http.routers.homepage_https.tls.certresolver=le_http"
            - "traefik.http.services.homepage-app.loadbalancer.server.port=80"
          container_name:             website

        mumble-web:
          image:                      rankenstein/mumble-web
          expose:
            - 80
          environment:
            MUMBLE_SERVER: "{{ base_url }}:64738"
          labels:
            - "traefik.enable=true"
            - "traefik.http.routers.mumble_http.rule=Host(`mumble.{{ base_url }}`)"
            - "traefik.http.routers.mumble_http.entryPoints=http"
            - "traefik.http.routers.mumble_http.middlewares=https_redirect@file"
            - "traefik.http.routers.mumble_https.rule=Host(`mumble.{{ base_url }}`)"
            - "traefik.http.routers.mumble_https.entryPoints=https"
            - "traefik.http.routers.mumble_https.tls.certresolver=le_http"
            - "traefik.http.services.mumble-app.loadbalancer.server.port=80"
          container_name:             mumble-web

        pgadmin:
          image:                      dpage/pgadmin4:latest
          expose:
            - 80
          environment:
            PGADMIN_DEFAULT_EMAIL:    "ca-pgadmin@noemis.me"
            PGADMIN_DEFAULT_PASSWORD: "{{ pgadmin_password }}"
          depends_on:
            - synapse-postgres
          labels:
            - "traefik.enable=true"
            - "traefik.http.routers.pgadmin_http.rule=Host(`pgadmin.{{ base_url }}`)"
            - "traefik.http.routers.pgadmin_http.entryPoints=http"
            - "traefik.http.routers.pgadmin_http.middlewares=https_redirect@file"
            - "traefik.http.routers.pgadmin_https.rule=Host(`pgadmin.{{ base_url }}`)"
            - "traefik.http.routers.pgadmin_https.entryPoints=https"
            - "traefik.http.routers.pgadmin_https.tls.certresolver=le_http"
            - "traefik.http.services.pgadmin-app.loadbalancer.server.port=80"
          container_name:             pgadmin

        matrix-appservice-irc:
          image:                      tulir/matrix-appservice-irc:latest
          command:                    node app.js -c config.yaml -p 9995 -f appservice-registration-irc.yaml -u http://0.0.0.0:9995
          expose:
            - 9995
          depends_on:
            - synapse
          volumes:
            - irc-appservice:/app/data
            - /root/matrix-appservice-irc/appservice-registration-irc.yaml:/app/appservice-registration-irc.yaml
            - /root/matrix-appservice-irc/config.yaml:/app/config.yaml
          container_name:             matrix-appservice-irc

        down:
          image:                      nginx:latest
          expose:
            - 80
          volumes:
            - /root/down/html:/usr/share/nginx/html
          container_name:             down

        pretix-database:
          image:                      postgres:9.6-alpine
          container_name:             pretix-database
          environment:
            - POSTGRES_USER=pretix
            - "POSTGRES_PASSWORD={{pretix_db_password}}"
          volumes:
            - pretix-postgres:/var/lib/postgresql/data

        redis:
          image:                      redis:latest
          container_name:             redis

        pretix:
          image:                      registry.git.desti.io/n0emis/pretix:latest
          container_name:             pretix
          depends_on:
            - pretix-database
            - redis
          volumes:
            - /root/pretix:/etc/pretix
            - pretix-data:/data
          labels:
            - "traefik.enable=true"
            - "traefik.http.routers.pretix_http.rule=Host(`pretix.{{ base_url }}`) || Host(`tickets.{{ base_url }}`)"
            - "traefik.http.routers.pretix_http.entryPoints=http"
            - "traefik.http.routers.pretix_http.middlewares=https_redirect@file"
            - "traefik.http.routers.pretix_https.rule=Host(`pretix.{{ base_url }}`) || Host(`tickets.{{ base_url }}`)"
            - "traefik.http.routers.pretix_https.entryPoints=https"
            - "traefik.http.routers.pretix_https.tls.certresolver=le_http"
            - "traefik.http.services.pretix-app.loadbalancer.server.port=80"

        murmur:
          image:                      mattikus/murmur:latest
          container_name:             murmur
          ports:
            - 64738:64738/udp
            - 64738:64738
            - 6502:6502
          volumes:
            - /root/murmur/murmur.ini:/etc/murmur.ini
            - /etc/ssl:/etc/ssl
            - murmur-data:/data

        maubot:
          image:                      dock.mau.dev/maubot/maubot:latest
          expose:
            - 8080
          volumes:
            - maubot-data:/data
            - /root/maubot/config.yaml:/data/config.yaml
          labels:
            - "traefik.enable=true"
            - "traefik.http.routers.maubot_http.rule=Host(`bot.{{ base_url }}`)"
            - "traefik.http.routers.maubot_http.entryPoints=http"
            - "traefik.http.routers.maubot_http.middlewares=https_redirect@file"
            - "traefik.http.routers.maubot_https.rule=Host(`bot.{{ base_url }}`)"
            - "traefik.http.routers.maubot_https.entryPoints=https"
            - "traefik.http.routers.maubot_https.tls.certresolver=le_http"
            - "traefik.http.services.maubot-app.loadbalancer.server.port=8080"
          container_name:             maubot

        dokuwiki:
          image:                    bitnami/dokuwiki:0
          volumes:
            - dokuwiki_data:/bitnami
          environment:
            DOKUWIKI_USERNAME: "admin"
            DOKUWIKI_FULL_NAME: "admin"
            DOKUWIKI_EMAIL: "dokuwiki-admin@chaos.jetzt"
            DOKUWIKI_WIKI_NAME: "{{ base_url }} Wiki"
          container_name:             dokuwiki
          labels:
            - "traefik.enable=true"
            - "traefik.http.routers.dokuwiki_http.rule=Host(`wiki.{{ base_url }}`)"
            - "traefik.http.routers.dokuwiki_http.entryPoints=http"
            - "traefik.http.routers.dokuwiki_http.middlewares=https_redirect@file"
            - "traefik.http.routers.dokuwiki_https.rule=Host(`wiki.{{ base_url }}`)"
            - "traefik.http.routers.dokuwiki_https.entryPoints=https"
            - "traefik.http.routers.dokuwiki_https.tls.certresolver=le_http"
            - "traefik.http.services.dokuwiki-app.loadbalancer.server.port=80"

      volumes:
        postgres-data:
        synapse-media:
        synapse-uploads:
        irc-appservice:
        pretix-data:
        pretix-postgres:
        murmur-data:
        maubot-data:
        dokuwiki_data:

      networks:
        web:
          external:                   true

  register: output
